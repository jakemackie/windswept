name: Staging Deployment

on:
  push:
    branches:
      - deployment/staging

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: staging

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up SSH and .env
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

          cat > .env <<EOF
          DISCORD_TOKEN=${{ secrets.DISCORD_TOKEN }}
          POSTGRES_USER=${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB=${{ secrets.POSTGRES_DB }}
          DATABASE_URL=postgresql://${{ secrets.POSTGRES_USER }}:${{ secrets.POSTGRES_PASSWORD }}@localhost:5432/${{ secrets.POSTGRES_DB }}?schema=public
          EOF

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.12.0'

      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install --omit=dev

      - name: Generate Prisma Client
        run: npx prisma generate

      - name: Build Typescript
        run: npm run build

      - name: Sync + Migrate + Restart on VPS
        run: |
          rsync -avz \
            --exclude='.git' \
            -e "ssh -i ~/.ssh/id_rsa" \
            ./ root@${{ secrets.SSH_HOST }}:/home/windswept/

          ssh -i ~/.ssh/id_rsa root@${{ secrets.SSH_HOST }} <<'EOF'
          cd /home/windswept
          npx prisma migrate deploy
          sudo systemctl restart windswept.service
          EOF
